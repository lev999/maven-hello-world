# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
- name: artifact_tag
  value: error value 

pool:
  vmImage: ubuntu-latest

steps:
#- task: Maven@3
#  displayName: 'update tag'
#  inputs:
#    mavenPomFile: 'my-app/pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'release:update-versions'

- task: Maven@3
  displayName: 'Build artifact with Maven'
  inputs:
    mavenPomFile: 'my-app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'package'

- script: |
    sudo apt  install xmlstarlet
    fullname=$(cat my-app/pom.xml | sed -e 's/ xmlns.*=".*"//g' | xmlstarlet sel -t -v '//project/version')
    init_num=${fullname##*.*.}
    increm_num=$( expr $init_num + 1)
    prefix=${fullname%%$init_num}
    final_tag=$prefix$increm_num
    echo "##vso[task.setvariable variable=artifact_tag]$final_tag"
    mv -f my-app/target/my-app-* my-app/target/my-app-$final_tag.jar
  displayName: Parse pom.xml and increment tag

- task: Docker@2
  inputs:
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    containerRegistry: 'docker-hub'
    repository: levka123/my-app
    tags: $(artifact_tag) 
  displayName: 'Build and push docker image'

- script: |
    docker pull levka123/my-app:$(artifact_tag)
    docker run levka123/my-app:$(artifact_tag) bash -c "java -jar /opt/mycompany/app/my-app-$(artifact_tag).jar"
  displayName: 'Pull and run docker image'