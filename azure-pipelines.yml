# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
- name: artifact_tag
  value: error value 

pool:
  vmImage: ubuntu-latest

steps:
#- task: Maven@3
#  displayName: 'update tag'
#  inputs:
#    mavenPomFile: 'my-app/pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'release:update-versions'

- task: Maven@3
  displayName: 'build artifact with Maven'
  inputs:
    mavenPomFile: 'my-app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'package'

- script: |
    sudo apt  install xmlstarlet
    fullname=$(cat my-app/pom.xml | sed -e 's/ xmlns.*=".*"//g' | xmlstarlet sel -t -v '//project/version')
    echo fullname=$fullname
    number=${fullname##*.*.}
    increment=$( expr $number + 1)
    final_version=${fullname%%$number}
    final_tag=$final_version$increment
    echo "##vso[task.setvariable variable=artifact_tag]$final_tag"
    mv -f my-app/target/my-app-1.0.* my-app/target/my-app-$final_tag
    ls -ltr my-app/target/
  displayName: parser

- script: |
      echo taaag=$(artifact_tag) 
  displayName: print tag

- task: Docker@2
  inputs:
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    containerRegistry: 'docker-hub'
    repository: levka123/rafael
    tags: $(artifact_tag) 
  displayName: 'docker build and push'

- script: |
    echo var=$(artifact_tag)
    docker pull levka123/rafael:$(artifact_tag)
    docker run levka123/rafael:$(artifact_tag) bash -c "java -jar /opt/mycompany/app/my-app-1.0.$(artifact_tag).jar"
  displayName: 'pull and run docker image'
