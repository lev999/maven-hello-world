# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
- name: artifact_tag
  value: error value 
- name: tag_const_part
  value: my-app-1.0.
- name: artifact_location
  value: /opt/mycompany/app/

pool:
  vmImage: ubuntu-latest

steps:
#- task: Maven@3
#  displayName: 'update tag'
#  inputs:
#    mavenPomFile: 'my-app/pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'release:update-versions'

#- task: Maven@3
#  displayName: 'build artifact with Maven'
#  inputs:
#    mavenPomFile: 'my-app/pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'clean install'

- script: |
    mkdir -p my-app/target/
    touch ./my-app/target/my-app-1.0.4.jar
    ls my-app/target/$tag_const_part*
    
    fullname=$(ls my-app/target/$tag_const_part*);
    cutFront=${fullname##'my-app/target/my-app-1.0.'};
    echo 1=$cutFront;
    cutFrontBack=${cutFront%%.jar};
    echo 2=$cutFrontBack    ;
    tag=$cutFrontBack;
    echo tag=$tag
    echo "##vso[task.setvariable variable=artifact_tag]$tag"
    echo artifact_tag=$(artifact_tag)
  displayName: Set new variable value

- bash:
    echo "##vso[task.setvariable variable=artifact_tag]$tag"
  displayName: NEW_BASH 
- script: |
  displayName: NEWvalue=
      echo ${{variables.artifact_tag}} 

- task: Docker@2
  displayName: Build docker
  inputs:
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    containerRegistry: 'docker-hub'
    repository: levka123/rafael
    tags: demo-azure

- script: |
    echo var=$(artifact_tag)
    docker pull levka123/rafael:demo
    docker run levka123/rafael:demo bash -c "java -jar /opt/mycompany/app/my-app-1.0.*.jar"
    

- bash: echo "##vso[task.setvariable variable=artifact_tag]secondValue"
- bash: echo var=$(artifact_tag)

- script: 
    docker pull levka123/rafael:$(artifact_tag)
