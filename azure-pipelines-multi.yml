# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest


variables:
- name: artifact_tag
  value: error value 
- name: docker_pswd
  value: $(DOCKER-SECRET)


steps:

#- task: Docker@2
#  displayName: Build docker
#  inputs:
#    command: 'build'
#    Dockerfile: '**/Dockerfile_multistage'
#    containerRegistry: 'docker-hub'
#    repository: levka123/my-app-multi
#    tags: tmp

- script: |
    fullname=my-app-1.0.1-SNAPSHOT.jar
    init_num=${fullname##my-app-}
    echo init_num
    prefix=${init_num%%*.*.*-SNAPSHOT.jar}
    
    echo $prefix

- bash: |
    fullname=$(docker run -t levka123/my-app-multi:tmp  bash -c " ls my-app-*")
    echo fullname=$fullname
    init_num=${fullname%%.jar}
    echo init_num=$init_num
    no_prefix=${init_num##my-app-}
    echo "##vso[task.setvariable variable=artifact_tag]$no_prefix"
    echo $no_prefix 
  displayName: Parse file name  

#- task: Docker@2
#  displayName: Push docker
#  inputs:
#    command: 'push'
#    Dockerfile: '**/Dockerfile_multistage'
#    containerRegistry: 'docker-hub'
#    repository: levka123/my-app-multi
#    tags: $(artifact_tag)


- script: |
    docker tag levka123/my-app-multi:tmp levka123/my-app-multi:$(artifact_tag)
    docker run levka123/my-app-multi:$(artifact_tag)
    docker login -u levka123 -p $(docker_pswd)
    docker push levka123/my-app-multi:$(artifact_tag)
  displayName: Push docker 

- script: |
    docker pull levka123/my-app-multi:$(artifact_tag)
    docker run levka123/my-app-multi:$(artifact_tag)
  displayName: Pull and run docker
