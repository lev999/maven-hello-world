# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest


variables:
- name: artifact_tag
  value: error value 


steps:


- script: |
    sudo apt  install xmlstarlet
    fullname=$(cat my-app/pom.xml | sed -e 's/ xmlns.*=".*"//g' | xmlstarlet sel -t -v '//project/version')
    init_num=${fullname##*.*.}
    increm_num=$( expr $init_num + 1)
    prefix=${fullname%%$init_num}
    final_tag=$prefix$increm_num
    echo "##vso[task.setvariable variable=artifact_tag]$final_tag"
  displayName: Parse pom.xml and increment tag

- task: Docker@2
  displayName: Build docker
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile_multistage'
    containerRegistry: 'docker-hub'
    repository: levka123/my-app-multi
    tags: tmp

- script: |
    fullname=$(docker run -t levka123/my-app-multi:tmp  bash -c " ls my-app-*")
    no_postfix=${fullname%%-SNAPSHOT.jar}
    no_prefix=${no_postfix##my-app-}
    echo "##vso[task.setvariable variable=artifact_tag]$no_prefix"
    echo $no_prefix 

#- task: Docker@2
#  displayName: Push docker
#  inputs:
#    command: 'push'
#    Dockerfile: '**/Dockerfile_multistage'
#    containerRegistry: 'docker-hub'
#    repository: levka123/my-app-multi
#    tags: $(artifact_tag)


#- script: |
#    docker build -f Dockerfile_multistage -t levka123/my-app-multi:$(artifact_tag) --build-arg tag=$(artifact_tag) .
#    docker push levka123/my-app-multi:$(artifact_tag)
#  displayName: Push docker 

- script: |
    docker pull levka123/my-app-multi:$(artifact_tag)
    docker run levka123/my-app-multi:$(artifact_tag)
  displayName: Pull and run docker
